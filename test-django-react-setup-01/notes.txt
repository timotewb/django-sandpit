python -m venv venv
python -m pip install --upgrade pip
touch requirements.txt
"""
Django==4.2
djangorestframework==3.14.0
"""

python -m pip install -r requirements.txt
django-admin startproject django_react01
django-admin startapp api
django-admin startapp frontend

> In django_react01/settings.py add code ot apps
"""
'api.apps.ApiConfig',
'frontend.apps.ApiConfig',
'rest_framework',
"""

> In frontend create folders
mkdir -p src
mkdir -p static/css
mkdir -p static/frontend
mkdir -p templates/frontend

> In frontend create files
touch src/index.js
touch webpack.config.js

> In frontend/webpack.config.js add code
"""
const path = require("path");
const webpack = require("webpack");

module.exports = {
  entry: "./src/index.js",
  output: {
    path: path.resolve(__dirname, "./static/frontend"),
    filename: "[name].js",
  },
  module: {
    rules: [
      {
        test: /\.js$/,
        exclude: /node_modules/,
        use: {
          loader: "babel-loader",
        },
      },
    ],
  },
  optimization: {
    minimize: true,
  },
  plugins: [
    new webpack.DefinePlugin({
      "process.env": {
        // This has effect on the react lib size
        NODE_ENV: JSON.stringify("development"),
      },
    }),
  ],
};
"""

> In frontend run below code
npm init -y

> Change version in newly created package.json file from ^18.2.0 to ^17.0.0

> In frontend run below code
npm i webpack webpack-cli --save-dev
npm i @babel/core babel-loader @babel/preset-env @babel/preset-react --save-dev
npm i react react-dom --save-dev
npm install @material-ui/core
npm install @babel/plugin-proposal-class-properties
npm install react-router-dom
npm install @material-ui/iconsm
npm install react react-dom --save-dev

> Change code in package.json
"""
  "scripts": {
    "dev": "webpack --mode development --watch",
    "build": "webpack --mode production"
  },
"""

> Fire it up lets go! (in frontend)
npm run dev